name: Build and Deploy Go Server to Lightsail

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build Go app
        run: go build -o app

      - name: Create .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" > .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "FIREBASE_CREDENTIALS=/home/ubuntu/kasa-go-server/firebase_credentials.json" >> .env
          echo "FIREBASE_CONFIG='${{ secrets.FIREBASE_CONFIG }}'" >> .env

      - name: Create Firebase credentials JSON
        run: |
          echo "${{ secrets.FIREBASE_CREDENTIALS_B64 }}" | base64 --decode > firebase_credentials.json

      - name: List files after build and .env creation
        run: ls -la

      - name: Ensure target folder exists on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            mkdir -p /home/ubuntu/kasa-go-server
            echo "Target directory created/verified"

      - name: Stop existing app process before upload
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            echo "Stopping existing app process..."
            pkill app || echo "No existing app process found"
            sleep 2

      - name: Upload app binary
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          source: "app"
          target: "/home/ubuntu/kasa-go-server/"
          overwrite: true

      - name: Upload .env file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          source: ".env"
          target: "/home/ubuntu/kasa-go-server/"
          overwrite: true

      - name: Upload Firebase credentials
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          source: "firebase_credentials.json"
          target: "/home/ubuntu/kasa-go-server/"
          overwrite: true

      - name: Verify uploaded files on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            echo "=== Checking uploaded files ==="
            ls -la /home/ubuntu/kasa-go-server/
            echo "=== Checking .env ==="
            cat /home/ubuntu/kasa-go-server/.env
            echo "=== Checking Firebase Credentials ==="
            if [ -f /home/ubuntu/kasa-go-server/firebase_credentials.json ]; then
              echo "✅ Firebase credentials uploaded"
            else
              echo "❌ Firebase credentials NOT found"
            fi

      - name: Grant app permission to bind port 80
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            sudo setcap 'cap_net_bind_service=+ep' /home/ubuntu/kasa-go-server/app
            echo "Port binding capability granted"

      - name: Start app on Lightsail
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            cd /home/ubuntu/kasa-go-server
            echo "Starting app from directory: $(pwd)"
            nohup ./app > app.log 2>&1 &
            sleep 3
            echo "App started with PID: $(pgrep app || echo 'Not found')"

      - name: Check app status and recent logs
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            echo "=== App Status ==="
            if pgrep app > /dev/null; then
              echo "✅ App is running (PID: $(pgrep app))"
            else
              echo "❌ App is not running"
            fi
            echo "=== Recent logs ==="
            if [ -f /home/ubuntu/kasa-go-server/app.log ]; then
              tail -10 /home/ubuntu/kasa-go-server/app.log
            else
              echo "No log file found"
            fi
